% LAMS2.MF      VERSION 1.0
% COPYRIGHT (C) 1989 BY THE TEXPLORATORS CORPORATION
% ALL RIGHTS RESERVED

if unknown cmbase: input cmbase fi
font_identifier:="LAMS"; font_size 10pt#;

u#:=20/36pt#;      % unit width
width_adj#:=0pt#;    % width adjustment for certain characters
serif_fit#:=0pt#;    % extra sidebar near lowercase serifs
cap_serif_fit#:=5/36pt#;  % extra sidebar near uppercase serifs
letter_fit#:=0pt#;    % extra space added to all sidebars

body_height#:=270/36pt#;  % height of tallest characters
asc_height#:=360/36pt#;    % height of lowercase ascenders
cap_height#:=246/36pt#;    % height of caps
fig_height#:=232/36pt#;    % height of numerals
x_height#:=155/36pt#;    % height of lowercase without ascenders
math_axis#:=90/36pt#;    % axis of symmetry for math symbols
bar_height#:=87/36pt#;    % height of crossbar in lowercase e
comma_depth#:=70/36pt#;    % depth of comma below baseline
desc_depth#:=0/36pt#;    % depth of lowercase descenders

crisp#:=8/36pt#;    % diameter of serif corners
tiny#:=8/36pt#;      % diameter of rounded corners
fine#:=7/36pt#;      % diameter of sharply rounded corners
thin_join#:=7/36pt#;    % width of extrafine details
hair#:=9/36pt#;      % lowercase hairline breadth
stem#:=24/36pt#;    % lowercase stem breadth
curve#:=29/36pt#;    % lowercase curve breadth
ess#:=27/36pt#;      % breadth in middle of lowercase s
flare#:=32/36pt#;    % diameter of bulbs or breadth of terminals
dot_size#:=38/36pt#;    % diameter of dots
cap_hair#:=11/36pt#;    % uppercase hairline breadth
cap_stem#:=30/36pt#;    % uppercase stem breadth
cap_curve#:=35/36pt#;    % uppercase curve breadth
cap_ess#:=33/36pt#;    % breadth in middle of uppercase s
rule_thickness#:=.4pt#;    % thickness of lines in math symbols

dish#:=1/36pt#;      % amount erased at top or bottom of serifs
bracket#:=20/36pt#;    % vertical distance from serif base to tangent
jut#:=30/36pt#;      % protrusion of lowercase serifs
cap_jut#:=37/36pt#;    % protrusion of uppercase serifs
beak_jut#:=10/36pt#;    % horizontal protrusion of beak serifs
beak#:=70/36pt#;    % vertical protrusion of beak serifs
vair#:=8/36pt#;      % vertical diameter of hairlines
notch_cut#:=10pt#;    % maximum breadth above or below notches
bar#:=11/36pt#;      % lowercase bar thickness
slab#:=11/36pt#;    % serif and arm thickness
cap_bar#:=11/36pt#;    % uppercase bar thickness
cap_band#:=11/36pt#;    % uppercase thickness above/below lobes
cap_notch_cut#:=10pt#;    % max breadth above/below uppercase notches
serif_drop#:=4/36pt#;    % vertical drop of sloped serifs
stem_corr#:=1/36pt#;    % for small refinements of stem breadth
vair_corr#:=1/36pt#;    % for small refinements of hairline height
apex_corr#:=0pt#;    % extra width at diagonal junctions

o#:=8/36pt#;      % amount of overshoot for curves
apex_o#:=8/36pt#;    % amount of overshoot for diagonal junctions

slant:=0;      % tilt ratio $(\Delta x/\Delta y)$
fudge:=1;      % factor applied to weights of heavy characters
math_spread:=0;      % extra openness of math symbols
superness:=1/sqrt2;    % parameter for superellipses
superpull:=1/6;      % extra openness inside bowls
beak_darkness:=11/30;    % fraction of triangle inside beak serifs
ligs:=2;      % level of ligatures to be included

square_dots:=false;    % should dots be square?
hefty:=false;      % should we try hard not to be overweight?
serifs:=true;      % should serifs and bulbs be attached?
monospace:=false;    % should all characters have the same width?
variant_g:=true;    % should an italic-style g be used?
low_asterisk:=false;    % should the asterisk be centered at the axis?
math_fitting:=true;    % should math-mode spacing be used?

mode_setup; font_setup;
autorounding:=0;

font_slant slant; font_x_height 0;
font_quad 18u# if not monospace:+4letter_fit# fi;

slant:=mono_charic#:=0;  % the remaining characters will not be slanted
currenttransform:=identity yscaled aspect_ratio scaled granularity;

% **********************************************
% Macros and character definitions.
% **********************************************

def Shaft (expr ChCode, ChWidthFrac,ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1= 0; x0=(w);
y1=-d; y0=h;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,90+theta); pos2(1.5rule_thickness,90+theta);
x2= w;
y2=h;
%filldraw z2l---z1l{z1-z2}..{z2-z1}z1r---z2r{z2-z1}..{z1-z2}cycle;
pickup pencircle scaled rule_thickness;
draw z1--z0;
penlabels(1,2); endchar;
enddef;

Shaft(0,1,4/5);
Shaft(13,1,5/6);
Shaft(26,1,1);
Shaft(39,5/6,1);
Shaft(52,4/5,1);
Shaft(65,3/4,1);
Shaft(78,2/3,1);
Shaft(91,3/5,1);
Shaft(104,1/2,1);

def DashedShaft (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1= 0; x0=(w);
y1=-d; y0=h;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,90+theta); pos2(1.5rule_thickness,90+theta);
x2= w;
y2=h;
%filldraw z2l---z1l{z1-z2}..{z2-z1}z1r---z2r{z2-z1}..{z1-z2}cycle;
pickup pencircle scaled rule_thickness;
draw z1--1/6z2;
draw 2/6z2--4/6z2;
draw 5/6z2--z2;
penlabels(1,2); endchar;
enddef;

DashedShaft(1,1,4/5);
DashedShaft(14,1,5/6);
DashedShaft(27,1,1);
DashedShaft(40,5/6,1);
DashedShaft(53,4/5,1);
DashedShaft(66,3/4,1);
DashedShaft(79,2/3,1);
DashedShaft(92,3/5,1);
DashedShaft(105,1/2,1);


def UpperHead (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=0; x0=w;
y1=-d; y0=h;
numeric theta; theta=angle(z0-z1);
pos1(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir -(90+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(180+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z2l=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
endchar;
enddef;

UpperHead(2,1,4/5);
UpperHead(15,1,5/6);
UpperHead(28,1,1);
UpperHead(41,5/6,1);
UpperHead(54,4/5,1);
UpperHead(67,3/4,1);
UpperHead(80,2/3,1);
UpperHead(93,3/5,1);
UpperHead(106,1/2,1);

def LowerHead (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=w;  x0=0;
y1=h;  y0=-d;
numeric theta; theta=angle(z1-z0);
pos1(rule_thickness,-90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir (90-(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(45-theta) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
pos5(bar,90-(45-theta)); z5l=z0; pos6(bar,-(45-theta)); z6l=z0;
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
endchar;
enddef;

LowerHead(3,1,4/5);
LowerHead(16,1,5/6);
LowerHead(29,1,1);
LowerHead(42,5/6,1);
LowerHead(55,4/5,1);
LowerHead(68,3/4,1);
LowerHead(81,2/3,1);
LowerHead(94,3/5,1);
LowerHead(107,1/2,1);





def UpperTopBarb (expr ChCode, ChWidthFrac,ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=0; x0=w;
y1=-d; y0=h;
numeric theta; theta=angle(z0-z1);
pos1(rule_thickness,90+theta);
pos0(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir -(90+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(180+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z2l=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2r{dir -(90-theta)}..{z1-z0}z0l--z2l--cycle;
endchar;
enddef;

UpperTopBarb(4,1,4/5);
UpperTopBarb(17,1,5/6);
UpperTopBarb(30,1,1);
UpperTopBarb(43,5/6,1);
UpperTopBarb(56,4/5,1);
UpperTopBarb(69,3/4,1);
UpperTopBarb(82,2/3,1);
UpperTopBarb(95,3/5,1);
UpperTopBarb(108,1/2,1);


def UpperBotBarb (expr ChCode, ChWidthFrac,ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);

adjust_fit(0,0); pickup crisp.nib;
x1=0; x0=w;
y1=-d; y0=h;
numeric theta; theta=angle(z0-z1);
pos1(rule_thickness,90+theta);
pos0(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir -(90+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(180+(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z2l=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
filldraw z2r{dir (90+theta)}..{z1-z0}z0r--z2l--cycle;
endchar;
enddef;

UpperBotBarb(5,1,4/5);
UpperBotBarb(18,1,5/6);
UpperBotBarb(31,1,1);
UpperBotBarb(44,5/6,1);
UpperBotBarb(57,4/5,1);
UpperBotBarb(70,3/4,1);
UpperBotBarb(83,2/3,1);
UpperBotBarb(96,3/5,1);
UpperBotBarb(109,1/2,1);


def LowerTopBarb (expr ChCode, ChWidthFrac,ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);

adjust_fit(0,0); pickup crisp.nib;
x1=w ; x0=0;
y1=h;  y0=-d;
numeric theta; theta=angle(z1-z0);
pos1(rule_thickness,90+theta);
pos0(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir (90-(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(45-theta) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
pos5(bar,90-(45-theta)); z5l=z0; pos6(bar,-(45-theta)); z6l=z0;
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
filldraw z2l{dir -(90-theta)}..{z1-z0}z0l--z2r--cycle;
endchar;
enddef;


LowerTopBarb(6,1,4/5);
LowerTopBarb(19,1,5/6);
LowerTopBarb(32,1,1);
LowerTopBarb(45,5/6,1);
LowerTopBarb(58,4/5,1);
LowerTopBarb(71,3/4,1);
LowerTopBarb(84,2/3,1);
LowerTopBarb(97,3/5,1);
LowerTopBarb(110,1/2,1);

def LowerBotBarb (expr ChCode, ChWidthFrac,ChHeightFrac)=
beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=w ; x0=0;
y1=h;  y0=-d;
numeric theta,delta;theta=angle(z1-z0);
pos1(rule_thickness,90+theta);
pos0(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir (90-(45-theta)) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir -(45-theta) scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
pos5(bar,90-(45-theta)); z5l=z0; pos6(bar,-(45-theta)); z6l=z0;
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2l{dir (90+theta)}..{z1-z0}z0r--z2r--cycle;
endchar;
enddef;


LowerBotBarb(7,1,4/5);
LowerBotBarb(20,1,5/6);
LowerBotBarb(33,1,1);
LowerBotBarb(46,5/6,1);
LowerBotBarb(59,4/5,1);
LowerBotBarb(72,3/4,1);
LowerBotBarb(85,2/3,1);
LowerBotBarb(98,3/5,1);
LowerBotBarb(111,1/2,1);

def LowerTopHook (expr ChCode, ChWidthFrac,ChHeightFrac)=
compute_spread(.45x_height#,.55x_height);
beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=(w) ; x0= 0;
y1=h;  y0=-d;
numeric theta,delta; theta=angle(z1-z0); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,-90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir (90+theta) xscaled spread yscaled spread;
%dir (90-theta) xscaled (delta+eps) yscaled (delta+eps);
%z3=z0+ dir -(45-theta) xscaled (delta+eps) yscaled (delta+eps);
pos5(bar,90-(45-theta)); z5l=z0; pos6(bar,-(45-theta)); z6l=z0;
z2l=z0;
z9=.381966[.5[z3,z4],z0];
pickup rule.nib;
z40= 1/2[z0,z4] + dir (180+theta) xscaled 2.5u yscaled 2.5u;
draw z0{z0-z1}..{z4-z0}z40..{z1-z0}z4;
%penstroke z2e..{z4-z9}z4e;

penlabels(0,1,2,3,4,5,6,9); endchar;
enddef;

LowerTopHook(8,1,4/5);
LowerTopHook(21,1,5/6);
LowerTopHook(34,1,1);
LowerTopHook(47,5/6,1);
LowerTopHook(60,4/5,1);
LowerTopHook(73,3/4,1);
LowerTopHook(86,2/3,1);
LowerTopHook(99,3/5,1);
LowerTopHook(112,1/2,1);

def LowerBotHook (expr ChCode, ChWidthFrac, ChHeightFrac)=
compute_spread(.45x_height#,.55x_height);
beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1=(w) ; x0= 0;
y1=h;  y0=-d;
numeric theta,delta; theta=angle(z1-z0); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,-90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir -(90-theta) xscaled spread yscaled spread;
%dir (90-theta) xscaled (delta+eps) yscaled (delta+eps);
%z3=z0+ dir -(45-theta) xscaled (delta+eps) yscaled (delta+eps);
pos5(bar,90-(45-theta)); z5l=z0; pos6(bar,-(45-theta)); z6l=z0;
z2l=z0;
z9=.381966[.5[z3,z4],z0];
z40= 1/2[z0,z4] + dir (180+theta) xscaled 2.5u yscaled 2.5u;
pickup rule.nib;
draw z0{z0-z1}..{z4-z0}z40..{z1-z0}z4;
%penstroke z2e..{z4-z9}z4e;

penlabels(0,1,2,3,4,5,6,9); endchar;
enddef;

LowerBotHook(9,1,4/5);
LowerBotHook(22,1,5/6);
LowerBotHook(35,1,1);
LowerBotHook(48,5/6,1);
LowerBotHook(61,4/5,1);
LowerBotHook(74,3/4,1);
LowerBotHook(87,2/3,1);
LowerBotHook(100,3/5,1);
LowerBotHook(113,1/2,1);



def UpperTopHook (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1= 0; x0=(w);
y1=-d; y0=h;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir (90+theta) xscaled (spread) yscaled (spread);
%z3=z0+ dir -(180+(45-theta)) xscaled (delta+eps) yscaled (delta+eps);
z2r=z0;
z9=.381966[.5[z3,z4],z0];
%penstroke z2e..{z3-z9}z3e;
z40= 1/2[z0,z4] + dir theta xscaled 2.5u yscaled 2.5u;
pickup rule.nib;
draw z0{z0-z1}..{z4-z0}z40..{z1-z0}z4;
penlabels(0,1,2,3,4,5,6,9); endchar;
enddef;
UpperTopHook(10,1,4/5);
UpperTopHook(23,1,5/6);
UpperTopHook(36,1,1);
UpperTopHook(49,5/6,1);
UpperTopHook(62,4/5,1);
UpperTopHook(75,3/4,1);
UpperTopHook(88,2/3,1);
UpperTopHook(101,3/5,1);
UpperTopHook(114,1/2,1);


def UpperBotHook (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0); pickup crisp.nib;
x1= 0; x0=(w);
y1=-d; y0=h;
numeric theta,delta; theta=angle(z0-z1); delta=3u++.24asc_height;
if abs(theta-45)<2.5: theta:=45; y1:=y0+x1-x0; fi % near-45$^\circ$ angle
pos1(rule_thickness,90+theta);
pos2(1.5rule_thickness,theta);
pos3(bar,theta); pos4(bar,theta);
z4=z0+ dir -(90-theta) xscaled (spread) yscaled (spread);
%z3=z0+ dir -(180+(45-theta)) xscaled (delta+eps) yscaled (delta+eps);
z2r=z0;
z9=.381966[.5[z3,z4],z0];
z40= 1/2[z0,z4] + dir theta xscaled 2.5u yscaled 2.5u;
%penstroke z2e..{z3-z9}z3e;

pickup rule.nib;
draw z0{z0-z1}..{z4-z0}z40..{z1-z0}z4;
penlabels(0,1,2,3,4,5,6,9); endchar;
enddef;
UpperBotHook(11,1,4/5);
UpperBotHook(24,1,5/6);
UpperBotHook(37,1,1);
UpperBotHook(50,5/6,1);
UpperBotHook(63,4/5,1);
UpperBotHook(76,3/4,1);
UpperBotHook(89,2/3,1);
UpperBotHook(102,3/5,1);
UpperBotHook(115,1/2,1);



def Squiggle (expr ChCode, ChWidthFrac, ChHeightFrac)=

beginchar(ChCode,ChWidthFrac*18u#,ChHeightFrac*18u#,0#);
adjust_fit(0,0);
x0= 0; x1=(w);
y0=-d; y1=h;
numeric theta,delta; theta=angle(z1-z0);
delta=3u;
z2=.5/6[z0,z1];
z8=5.5/6[z0,z1];
z3=1/6[z0,z1] + dir (90+theta) xscaled (delta+eps) yscaled (delta+eps);
z5=3/6[z0,z1] + dir (90+theta) xscaled (delta+eps) yscaled (delta+eps);
z7=5/6[z0,z1] + dir (90+theta) xscaled (delta+eps) yscaled (delta+eps);
z4=2/6[z0,z1] + dir -(90-theta) xscaled (delta+eps) yscaled (delta+eps);
z6=4/6[z0,z1] + dir -(90-theta) xscaled (delta+eps) yscaled (delta+eps);

pickup pencircle scaled rule_thickness;
draw z0--z2--z3--z4--z5--z6--z7--z8--z1;
penlabels(1,2); endchar;
enddef;

Squiggle(12,1,4/5);
Squiggle(25,1,5/6);
Squiggle(38,1,1);
Squiggle(51,5/6,1);
Squiggle(64,4/5,1);
Squiggle(77,3/4,1);
Squiggle(90,2/3,1);
Squiggle(103,3/5,1);
Squiggle(116,1/2,1);

beginchar(117,0,math_axis#,0);
adjust_fit(0,0); pickup crisp.nib;
x0=0;
y0=math_axis;
pos2(1.5rule_thickness,0);
pos3(bar,0); pos4(bar,0);
z4=z0+ dir -45 xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z3=z0+ dir 45 xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z2r=z0; %was z2l
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
endchar;

beginchar(118,0,math_axis#,0);
adjust_fit(0,0); pickup crisp.nib;
x0=0;
y0=math_axis;
pos2(1.5rule_thickness,180);
pos3(bar,180); pos4(bar,180);
z4=z0+ dir (180-45) xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z3=z0+ dir (180+45) xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
endchar;

beginchar(119,0,math_axis#,0);
adjust_fit(0,0); pickup crisp.nib;
x0=0;
y0=math_axis;
pos2(1.5rule_thickness,0);
pos3(bar,0); pos4(bar,0);
pos0(rule_thickness,90);
z4=z0+ dir -45 xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z3=z0+ dir 45 xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z3-z9}z3r---{z9-z3}z3l..z2l--cycle;
filldraw z2l{down}..{right}z0l--z2r--cycle;
endchar;

beginchar(120,0,math_axis#,0);
adjust_fit(0,0); pickup crisp.nib;
x0=0;
y0=math_axis;
pos0(rule_thickness,90);
pos2(1.5rule_thickness,0);
pos3(bar,0); pos4(bar,0);
z4=z0+ dir -45 scaled ((3u++.24asc_height)+eps-rule_thickness-.5crisp.breadth);
z3=z0+ dir 45 xscaled ((3u++.24asc_height)+eps-rule_thickness) yscaled ((3u++.24asc_height)+eps-rule_thickness);
z2r=z0;
z9=.381966[.5[z3,z4],z0];
pickup crisp.nib;
filldraw z2r..{z4-z9}z4r---{z9-z4}z4l..z2l--cycle;
filldraw z2l{up}..{right}z0r--z2r--cycle;
endchar;

compute_spread(.45x_height#,.55x_height);
beginchar(121,spread#,math_axis#,0#);
adjust_fit(0,0); pickup crisp.nib;
x0=w;
y0=math_axis;
z4=z0+ dir (90) xscaled spread yscaled spread;
pickup rule.nib;
lft x40=0;
y40=good.y 1/2[y0,y4];
draw z0{left}..z40..{right}z4;
endchar;

beginchar(122,spread#,math_axis#,0#);
adjust_fit(0,0); pickup crisp.nib;
x0=w;
y0=math_axis;
z4=z0+ dir (-90) xscaled spread yscaled spread;
pickup rule.nib;
lft x40=0;
y40=good.y 1/2[y0,y4];
draw z0{left}..z40..{right}z4;
endchar;

bye.
